# Util func
del_stopped () {
	local name=$1
	local state
	state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)
	if [[ $state == "false" ]]
	then
		docker rm "$name"
	fi
}

# Call funcs
postgres () {
	docker run --rm -d \
		-e POSTGRES_DB=catalog \
		-e POSTGRES_USER=catalog \
		-e POSTGRES_PASSWORD=catalog \
		-v $HOME/.config/postgres:/var/lib/postgresql/data \
		--network host \
		--name postgres postgres
}

firefox () {
	mkdir -p /tmp/firefox_tmp
	docker run --rm -d \
		--pid host \
		--group-add render \
		--group-add video \
		--group-add audio \
		--memory 4096m \
		--cpus=2 \
		--net host \
		--device /dev/dri \
		-v /dev/shm:/dev/shm \
		-v /tmp/firefox_tmp:/home/firefox/Downloads \
		-e DISPLAY=unix$DISPLAY \
		-e XDG_RUNTIME_DIR=/tmp \
		-e WAYLAND_DISPLAY=$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/pulse:/tmp/pulse \
		--name firefox my/firefox $@

# For web camera access
#		-v /dev/video0:/dev/video0 --privileged \
}

waterfoxg3 () {
	docker run --rm -d \
		--memory 4096m \
		--cpus=2 \
		--net host \
		-v /dev/shm:/dev/shm \
		-v $HOME/.config/isolated_env/waterfoxg3:/home/waterfox \
		-e DISPLAY=unix${DISPLAY} \
		-e XDG_RUNTIME_DIR=/tmp \
		-e WAYLAND_DISPLAY=$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/pulse:/tmp/pulse \
		--name waterfoxg3 my/waterfoxg3
}

telegram () {
	mkdir -p /tmp/telegram_tmp
	docker run --rm -d \
		--memory 1024m \
		--cpus=1 \
		--net host \
		-v /dev/shm:/dev/shm \
		-v /tmp/telegram_tmp:/home/telegram/Downloads \
		-e DISPLAY=unix$DISPLAY \
		-e XDG_RUNTIME_DIR=/tmp \
		-e WAYLAND_DISPLAY=$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/pulse:/tmp/pulse \
		-v $XDG_RUNTIME_DIR/bus:/tmp/bus \
		-v $HOME/.config/isolated_env/telegram:/home/telegram/.local/share \
		-v /etc/localtime:/etc/localtime:ro \
		--name telegram my/telegram
}

intellij () {
	docker run --rm -d \
		--net host \
		-v /dev/shm:/dev/shm \
		-v $HOME/.config/isolated_env/intellij:/home/goland \
		-v $HOME/go:/home/goland/go \
		-e _JAVA_AWT_WM_NONREPARENTING=1 \
		-e DISPLAY=unix$DISPLAY \
		-e XDG_RUNTIME_DIR=/tmp \
		-e WAYLAND_DISPLAY=$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY \
		--name intellij my/intellij
}

mpd () {
	del_stopped mpd
	docker run --rm -d \
		--net host \
		-v $HOME/Music:/home/mympd/Music:ro \
		-v $HOME/.config/isolated_env/mpd:/home/mympd/database \
		-e XDG_RUNTIME_DIR=/tmp \
		-v $XDG_RUNTIME_DIR/pulse:/tmp/pulse \
		--name mpd my/mpd
}

nginx () {
	docker run --rm -d \
		--memory 512m \
		--cpus=1 \
		--net host \
		-v $HOME/.config/isolated_env/nginx:/app:ro \
		--name nginx my/nginx
}

archlinux() {
	docker run --rm -it \
		--detach-keys="ctrl-@" \
		--name archlinux archlinux
}

archlinux_wayland() {
	docker run --rm -it \
		--detach-keys="ctrl-@" \
		--net host \
		-v /tmp/mytmp:/tmp/mytmp \
		-v /dev/shm:/dev/shm \
		-e DISPLAY=unix$DISPLAY \
		-e XDG_RUNTIME_DIR=/tmp \
		-e WAYLAND_DISPLAY=$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/pulse:/tmp/pulse \
		--name archlinux_wayland archlinux
}
archlinux_x11() {
	docker run --rm -it \
		--detach-keys="ctrl-@" \
		--net host \
		-v /dev/shm:/dev/shm \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY=unix$DISPLAY \
		-e XDG_RUNTIME_DIR=/tmp \
		-v $XDG_RUNTIME_DIR/pulse:/tmp/pulse \
		--name archlinux_x11 archlinux
}

nvimide () {
	docker run --rm -it \
		--detach-keys="ctrl-@" \
		-v $HOME/go:/home/vim-go/go \
		-v $HOME/My_linux_settings/vim/dot-vimrc:/home/vim-go/.vimrc:ro \
		-v $HOME/My_linux_settings/zsh/dot-zshrc:/home/vim-go/.zshrc:ro \
		-v $HOME/My_linux_settings/tmux/dot-tmux.conf:/home/vim-go/.tmux.conf:ro \
		-v $HOME/My_linux_settings/tmux-theme/tmux:/home/vim-go/.config/tmux:ro \
		-v $HOME/My_linux_settings/oh-my-zsh/zsh:/home/vim-go/.config/zsh:ro \
		-v $HOME/Projects/go:/home/vim-go/HomeProjects \
		-v /tmp/mytmp:/tmp/mytmp \
		--name nvimide my/nvimide
}

steam () {
	docker run --rm -d \
		--device /dev/dri \
		--net host \
		-v /dev/shm:/dev/shm \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-e DISPLAY=unix$DISPLAY \
		-e XDG_RUNTIME_DIR=/tmp \
		-v $XDG_RUNTIME_DIR/pulse:/tmp/pulse \
		-v $HOME/.config/isolated_env/steam:/home/steam \
		--name steam my/steam
}

discord() {
	docker run --rm -d \
		--detach-keys="ctrl-@" \
		--net host \
		-v /dev/shm:/dev/shm \
		-e DISPLAY=unix$DISPLAY \
		-e XDG_RUNTIME_DIR=/tmp \
		-e WAYLAND_DISPLAY=$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/pulse:/tmp/pulse \
		-v /etc/localtime:/etc/localtime:ro \
		-v $HOME/.config/isolated_env/discord:/home/discord \
		--name discord my/discord
}

vscode() {
	docker run --rm -d \
		--net host \
		-v /dev/shm:/dev/shm \
		-e DISPLAY=unix$DISPLAY \
		-e XDG_RUNTIME_DIR=/tmp \
		-e WAYLAND_DISPLAY=$WAYLAND_DISPLAY \
		-v $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY:/tmp/$WAYLAND_DISPLAY \
		-v $HOME/.config/isolated_env/vscode:/home/vscode \
		--name vscode my/vscode
}
