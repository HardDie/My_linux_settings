* Good example C comments
/**
 * Copies the default config to startup.
 * Reads the default config file/partition,
 * stripping the headers and validating the md5sum,
 * and writes it to the startup config.
 * @param  msg  - destanation masage
 * @retval 0 if successful.
 * @retval 1 if the default config does not exist.
 * @retval other in case of error.
 */

* Sites for test regular expression
  https://www.debuggex.com/
  https://regexper.com/

* Emacs. How enable merge conflict resolve mode
  vc-resolve-conflicts

* How remove attribute
** Install
   yaourt mat mutagen perl-image-exiftool
** Check
   mat -c <file>
** Show metadata
   mat -d <file>
** Delete metadata
   mat -b <file>

* How add fat and ntfs tools
  pacman -S dosfstools ntfsprogs

* How add file system for flash
  pacman -S f2fs-tools

* ASCIIFLOW
  http://nightly.ascii-flow.appspot.com/#Draw

* Service for found photo
  snradar.azurewebsites.net

* Emacs git blame
  M-x vc-annotate

* How setup WiFi card on promiscuous mode
** Find your phy
   iw phy
** Add new interface
   iw phy phyX interface add mon0 type monitor
   iw dev mon0 del
** With iw
   iw dev wlan0 set type monitor
   iw dev wlan0 set type managed
** Set channel for listen
   iw dev wlan0 set channel *channel*

* Unprivileged power management
  pacman -S polkit

* Run command on every find file
  find -name "name" -execdir command {} \;

* Objdump
** objdump -D file
** addr2line -e file -a 0x(addr)
** strip

* Get information about interface
  ethtool eth0
* Setup speed interface
  ethtool -s eth0 speed 100 autoneg off

* Show last installed packed
  expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort
  expac -S -H M '%k\t%n' | sort -h

** Crypt setup
*** Edit /etc/default/grub
    cryptdevice=/dev/sda2:name_crypt

* SSH tunnel
** PC1 --> ( NAT ) --> WAN <-- PC2
  ssh -f -N -R PC2_PORT:PC1_IP:PC1_PORT PC2_name@PC2_IP
** Example
  ssh -f -N -R 2222:10.10.1.1:22 username@273.15.26.11

* Draw gpaphs
  pacman -S graphviz

* Validator json
  https://jsonlint.com/

* How setup systemd boot
  bootctl install
  cd /boot/loader
  vim loader.conf = {
    default arch
    timeout 3
  }
  vim entries/arch.conf = {
    title Archlinux
    linux /vmlinuz-linux
    initrd /initramfs-linux.img
    :r !blkid
    options root=PARTUID=some_UUID rw
  }

* How upgrade ssh id_rsa
  openssl pkcs8 -topk8 -v2 des3 -in id_rsa.old -out id_rsa

* Hex editor
  hexer

* Disable kerlen printk logs
  echo 0 > /proc/sys/kernel/printk

* How to use git diff to patch file
**  git diff --no-prefix > [path file name]
**  patch -p0 < [path file name]
**  git diff > patch.diff
**  patch -p1 < patch.diff

* i3 how find key name
** xev
** xmodmap -pke

* Remove default gw
  ip route del default via 192.168.1.1

* Add route
  ip route add 192.168.2.0/24 via 192.168.1.1 dev enp3s0

* Count lines code
  tokei

* Disable installing default gw and dns from DHCP
** Open /etc/dhcpcd.conf and add to end
** interface iface_name
** nogateway
** nohook resolv.conf

* Setup fail2ban
** fail2ban/action.d/iptables-blocktype.local
*** [Init]
*** blocktype = DROP
** fail2ban/jail.d/sshd.local
*** [sshd]
*** enabled = true
*** maxretry = 5
*** ignoreip = 127.0.0.1/8
*** port = 22

* netstat
** Get listen tcp ports
*** netstat -plnt
** Get listen udp ports
*** netstat -plnu

* graphviz online
** http://dreampuf.github.io/GraphvizOnline/

* tmux
** Create tmux session in background
   tmux new-session -d
** Send command in all tmux panes
   :setw synchronize-panes on

* Disable NetworkManager checking network available
** edit /etc/NetworkManager/NetworkManager.conf
*** [connectivity]
*** interval=0

* Show font symbols
** Print font family
   fc-query some.ttf or some.otf
** Print font symbols
   xfd -fa "SomeFontFamily"

* Backup
** Create
   dd if=/dev/sda | gzip -c > some.img.gz
** Restore
   gzip -dc some.img.gz | dd of=/dev/sda

* UEFI Security Boot
** Generate keys
*** PK - with password for sign binary files
    openssl req -new -x509 -newkey rsa:2048 -sha256 -days 365 -subj "/CN=Platform Key" -keyout PK.key -out PK.pem
*** KEK
    openssl req -new -x509 -newkey rsa:2048 -sha256 -days 365 -subj "/CN=Key Exchange Key" -keyout KEK.key -out KEK.pem
*** ISK
    openssl req -new -x509 -newkey rsa:2048 -sha256 -days 365 -subj "/CN=Image Signing Key" -keyout ISK.key -out ISK.pem
** Convert to UEFI format
*** cert-to-efi-sig-list -g "$(uuidgen)" PK.pem PK.esl
*** cert-to-efi-sig-list -g "$(uuidgen)" KEK.pem KEK.esl
*** cert-to-efi-sig-list -g "$(uuidgen)" ISK.pem ISK.esl
** Create db.esl
   cat ISK.esl > db.esl
** Signing
*** PK sign by PK
    sign-efi-sig-list -k PK.key -c PK.pem PK PK.esl PK.auth
*** KEK sign by PK
    sign-efi-sig-list -k PK.key -c PK.pem KEK KEK.esl KEK.auth
*** db sign by KEK
    sign-efi-sig-list -k KEK.key -c KEK.pem db db.esl db.auth
** Write *.auth files to UEFI in order db, KEK, PK
** Sign binary
   sbsign --key ISK.key --cert ISK.pem --output bootx64.efi some_image.EFI

* How unpack initramfs image
** zcat /boot/initramfs-linux.img > some.cpio
** cpio -vid < some.cpio

* Linux
** Set time
   date +%T -s "12:34:56"

* How run another display server
** Run server
   Xephyr :1 -ac -screen 640x480x8
** Run app
   DISPLAY=:1 app

* Utils
** NCurses Disk Usage
   ncdu
** Convert djvu to pdf (djvulibre)
   ddjvu -format=pdf in.djvu out.pdf

* Wireshark
** How decrypt HTTPS session
*** Set environment var
    SSLKEYLOGFILE=/tmp/ssl.log
*** Setup wireshark
    Edit -> Preferences -> Protocols -> TLS -> (Pre)-Master-Secret log filename

* Rename
** Change extensions
   rename png jpeg *.png

* Bash scripts
** Force varible declaration before access
   set -u
** Make any failure in piped commands be reflected in the exit code
   set -o pipefail

* Hacks
** Remove lines from test1 because they are in test2:
   grep -vxFf test2 test1
